package main

func main() {

	//link := fmt.Sprintf("Чат: %s \n", "https://t.me/joinchat/UU3VH1Z-rL_9AXQ2")
	//fmc.Printfln("msg: %s", msg)
}
"password"

//in auth code
login, err := r.Cookie("login")
		if err != nil {
			fmt.Printf("[login] error %s\n", err.Error())
			//fmt.Fprintf(w, "[login] error %s", err)
			http.Redirect(w, r, "/reg", http.StatusMovedPermanently)
			return

		}
		password, err := r.Cookie("password")
		if err != nil {
			fmt.Println(err.Error())
			if err != nil {
				_, err := w.Write([]byte(err.Error()))
				if err != nil {
					fmt.Printf("error in index() with text: %s \n", err.Error())
				}
				http.Redirect(w, r, "/reg", 301)
				return
			}
		} else {
			fmt.Println(password.Value)
		}
		decodedlogin, err := url.QueryUnescape(login.Value)
		if err != nil {
			fmt.Printf("[login] error %s\n", err.Error())
			//fmt.Fprintf(w, "[login] error %s", err)
			http.Redirect(w, r, "/reg", 301)
			return

		}
		decodedpassword, err := url.QueryUnescape(password.Value)
		if err != nil {
			fmt.Printf("[login] error %s\n", err.Error())
			//fmt.Fprintf(w, "[login] error %s", err)
			http.Redirect(w, r, "/reg", 301)
			return

		}
		var epoch = time.Unix(0, 0).Format(time.RFC1123)
var noCacheHeaders = map[string]string{
	"Expires":         epoch,
	"Cache-Control":   "no-cache, private, max-age=0",
	"Pragma":          "no-cache",
	"X-Accel-Expires": "0",
}

//fmt.Println("init>user>", user[0].BotToken)
/*
	if len(user) != 0 {

		fmc.Printfln("user:%s", user[0].BotToken)
		if initV == 0 {
			fmc.Println("#rbtinitBot>Run bot>")
			go runBot()
			initV = 1
		} else {
			//	Updatetoken <- "t"
			for {
				select {
				case <-upd.CheckInit:
					if initV == 0 {
						fmc.Println("#rbtinitBot>Run bot>")
						go runBot()
						initV = 1
					} else {
						fmc.Println("#rbtinitBot>Update Token>")
						Updatetoken <- "t"
					}
				}
			}

		}
	} else {

		for {
			select {
			case <-upd.CheckInit:
				if initV == 0 {
					fmc.Println("#rbtinitBot>Run bot>")
					go runBot()
					initV = 1
				} else {
					fmc.Println("#rbtinitBot>Update Token>")
					Updatetoken <- "t"
				}
			}
		}
	}
*/
